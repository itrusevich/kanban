{"version":3,"sources":["components/Header.js","components/ModalDelete.js","components/TaskCard.js","components/Column.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","isOpenCreateTaskForm","onClick","openCreateTaskForm","htmlFor","type","value","taskInput","onChange","onTaskChange","priorityValue","id","onPriorityChange","taskSubmit","disabled","isValidTaskInput","taskReset","ModalDelete","useState","show","setShow","handleClose","trash","width","height","viewBox","fill","xmlns","d","fillRule","Modal","onHide","closeButton","Title","Body","Footer","Button","variant","task","onTaskDelete","Task","taskEdit","setTaskEdit","left","right","pen","up","down","key","name","e","target","onTaskSave","trim","priority","changePriority","status","onStatusChangeRight","onStatusChangeLeft","Column","tasks","filter","el","sort","a","b","map","TaskCard","Board","statuses","App","setIsOpenCreateTaskForm","isActiveButtonTaskCreate","setIsActiveButtonTaskCreate","setTaskInput","setPriorityValue","setTasks","setIsValidTaskInput","length","updatedTasks","push","Math","random","indexOf","isIncrease","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8088c735.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nfunction Header(props) {\n\n  return (\n    <div className=\"container\">\n      <h1>Kanban</h1>\n\n      {!props.isOpenCreateTaskForm && <button className=\"btn btn-primary\" onClick={props.openCreateTaskForm}>Create Task</button>}\n\n      {props.isOpenCreateTaskForm &&\n        <form>\n          <div className=\"form-group\">\n\n            <label htmlFor=\"exampleInputEmail1\">Enter task name:</label>\n            <input type=\"text\" className=\"form-control\"\n              value={props.taskInput}\n              onChange={props.onTaskChange} />\n\n            <label htmlFor=\"exampleInputEmail2\">Enter priority:</label>\n            <select value={props.priorityValue} id=\"priority\" className=\"form-control\" onChange={props.onPriorityChange}>\n              <option value=\"0\">select priority</option>\n              <option value=\"1\">High</option>\n              <option value=\"2\">Medium</option>\n              <option value=\"3\">Low</option>\n            </select>\n          </div>\n\n          <div className=\"buttons-container\">\n            <button type=\"submit\" className=\"btn btn-primary\"\n              onClick={props.taskSubmit}\n              disabled={!(props.isValidTaskInput && props.priorityValue !== '0')}>Submit</button>\n\n            <button className=\"btn btn-secondary\"\n              onClick={props.taskReset}\n            >Cancel</button>\n          </div>\n        </form>\n      }\n    </div>\n  );\n}\n\nexport default Header;\n","import React, {useState} from 'react';\nimport '../App.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n\n\nfunction ModalDelete(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const deleteConfirmed = (id) => {\n    props.onTaskDelete(id);\n    setShow(false);\n  }\n\n  const trash = <svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n    <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\n  </svg>\n\n  return (\n    <>\n      <div className=\"mr-md-5\" onClick={handleShow}>\n      {trash}\n      </div>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete this task?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={()=> deleteConfirmed(props.task.id)}>\n            Delete Task\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalDelete;\n","import React, { useState } from 'react';\nimport '../App.css';\nimport ModalDelete from './ModalDelete';\n\n\nfunction Task(props) {\n  const [taskEdit, setTaskEdit] = useState({});\n\n  const editMode = (task) => {\n    setTaskEdit(task);\n  }\n\n  const onEditTaskChange = (e) => {\n    setTaskEdit({ ...taskEdit, name: e.target.value });\n  };\n\n  const taskSave = () => {\n    props.onTaskSave(taskEdit);\n    setTaskEdit({});\n  }\n\n  const left = <svg className=\"bi bi-arrow-left\" width=\"1.7em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\" />\n    <path fillRule=\"evenodd\" d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\n  </svg>\n\n  const right = <svg className=\"bi bi-arrow-right\" width=\"1.7em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\" />\n    <path fillRule=\"evenodd\" d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\" />\n  </svg>\n\n  const pen = <svg className=\"bi bi-pen\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M5.707 13.707a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391L10.086 2.5a2 2 0 0 1 2.828 0l.586.586a2 2 0 0 1 0 2.828l-7.793 7.793zM3 11l7.793-7.793a1 1 0 0 1 1.414 0l.586.586a1 1 0 0 1 0 1.414L5 13l-3 1 1-3z\" />\n    <path fillRule=\"evenodd\" d=\"M9.854 2.56a.5.5 0 0 0-.708 0L5.854 5.855a.5.5 0 0 1-.708-.708L8.44 1.854a1.5 1.5 0 0 1 2.122 0l.293.292a.5.5 0 0 1-.707.708l-.293-.293z\" />\n    <path d=\"M13.293 1.207a1 1 0 0 1 1.414 0l.03.03a1 1 0 0 1 .03 1.383L13.5 4 12 2.5l1.293-1.293z\" />\n  </svg>\n\n  const up = <svg className=\"bi bi-plus\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\" />\n    <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\" />\n  </svg>\n\n  const down = <svg className=\"bi bi-dash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\"/>\n</svg>\n\n  return (\n    <li key={props.task.id} className=\"task-card\">\n      <div className=\"task-title\">\n        {\n          taskEdit.id === props.task.id\n            ? <div>\n                <input type=\"text\" className=\"form-control\" value={taskEdit.name} onChange={onEditTaskChange} />\n                <button className=\"btn btn-outline-primary btn-sm margin-left mt-1\" onClick={taskSave} disabled={!taskEdit.name.trim()}>Save</button>\n              </div>\n            : <label className=\"task-name mr-md-3\">{props.task.name}</label>\n        }\n        {  taskEdit.id !== props.task.id && <div className=\"task-actions\">\n          <span onClick={() => editMode(props.task)}>{pen}</span>\n          <ModalDelete onTaskDelete={props.onTaskDelete} task={props.task} />\n        </div>}\n      </div>\n      <div className=\"task-priority\">\n\n        <button className=\"priority-button\" disabled={props.task.priority === 1} onClick={() => props.changePriority(props.task.id, true)}>{up}</button>\n        {\n          (+props.task.priority === 1) ? <span className=\"badge badge-danger\">High</span> : (+props.task.priority === 2) ? <span className=\"badge badge-warning\">Medium</span> : <span className=\"badge badge-success\">Low</span>\n        }\n        <button className=\"priority-button\" disabled={props.task.priority === 3} onClick={() => props.changePriority(props.task.id)}>{down}</button>\n      </div>\n\n      <div className=\"buttons\">\n        {\n          (props.task.status === 'TODO') ?\n            <div className=\"margin-left\" onClick={() => props.onStatusChangeRight(props.task.id)}>{right}</div> :\n            (props.task.status === 'DONE') ?\n              <div className=\"margin-left\" onClick={() => props.onStatusChangeLeft(props.task.id)}>{left}</div> :\n              <>\n                <div className=\"margin-left\" onClick={() => props.onStatusChangeLeft(props.task.id)}>{left}</div>\n                <div onClick={() => props.onStatusChangeRight(props.task.id)}>{right}</div>\n              </>\n        }\n\n      </div>\n    </li>\n  )\n}\nexport default Task;\n","import React from 'react';\nimport '../App.css';\nimport TaskCard from './TaskCard';\n\n\nfunction Column(props) {\n  return (\n    <>\n      {props.tasks.filter(el => el.status === props.status)\n        .sort((a, b) => +a.priority - (+b.priority))\n        .map(el => (\n          <TaskCard task={el}\n            onStatusChangeRight={props.onStatusChangeRight}\n            onStatusChangeLeft={props.onStatusChangeLeft}\n            onTaskDelete={props.onTaskDelete}\n            onTaskSave={props.onTaskSave}\n            changePriority={props.changePriority}\n            />\n        ))\n      }\n    </>\n  )\n}\nexport default Column;\n","import React from 'react';\nimport '../App.js';\nimport Column from './Column.js';\n\nfunction Board(props) {\n\n  return (\n    <div className=\"container\">\n      <div>\n        <ul className=\"board\">\n          {props.statuses.map(status => {\n            return (\n              <li className=\"column\" key={status}>\n                <div className=\"column-title\">\n                  {status}\n                </div>\n                <ul className=\"cards-container\">\n                  <Column tasks={props.tasks}\n                    status={status}\n                    onStatusChangeRight={props.onStatusChangeRight}\n                    onStatusChangeLeft={props.onStatusChangeLeft}\n                    onTaskDelete={props.onTaskDelete}\n                    onTaskSave={props.onTaskSave}\n                    changePriority={props.changePriority}\n                  />\n                </ul>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div >\n  );\n}\n\nexport default Board;\n","import React, { useState } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport Header from './components/Header';\nimport Board from './components/Board';\nimport './App.css';\n\nfunction App() {\n  const initialTasks = [\n    { id: 1, name: 'Create F1', priority: 1, status: 'TODO' },\n    { id: 2, name: 'Edit F2', priority: 2, status: 'REVIEW' },\n    { id: 3, name: 'Remove F3', priority: 3, status: 'DONE' },\n    { id: 4, name: 'Create F4', priority: 1, status: 'IN PROGRESS' },\n    { id: 5, name: 'Edit F5', priority: 2, status: 'TODO' },\n  ];\n\n  const statuses = ['TODO', 'IN PROGRESS', 'REVIEW', 'DONE'];\n\n  const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\n  const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\n  const [taskInput, setTaskInput] = useState('');\n  const [priorityValue, setPriorityValue] = useState('0');\n  const [tasks, setTasks] = useState(initialTasks);\n  const [isValidTaskInput, setIsValidTaskInput] = useState(false);\n\n  const onStatusChangeRight = (id) => {\n    const updatedTasks = tasks.map(el => {\n      if (el.id === id) return { ...el, status: statuses[statuses.indexOf(el.status) + 1] }\n      else return el;\n    })\n    setTasks(updatedTasks);\n  }\n\n  const onStatusChangeLeft = (id) => {\n    const updatedTasks = tasks.map(el => {\n      if (el.id === id) return { ...el, status: statuses[statuses.indexOf(el.status) - 1] }\n      else return el;\n    })\n    setTasks(updatedTasks);\n  }\n\n  const onTaskSave = (task) => {\n    const updatedTasks = tasks.map(el => {\n      if (el.id === task.id) return { ...el, name: task.name }\n      else return el;\n    })\n    setTasks(updatedTasks);\n  };\n\n  const onTaskDelete = (id) => {\n    const updatedTasks = tasks.filter(el => el.id !== id)\n    setTasks(updatedTasks);\n  };\n\n  const openCreateTaskForm = () => {\n    setIsOpenCreateTaskForm(true);\n  };\n\n  const onTaskChange = (e) => {\n    setIsValidTaskInput(e.target.value.length > 4)\n    setTaskInput(e.target.value);\n  };\n\n  const onPriorityChange = (e) => {\n    setPriorityValue(e.target.value);\n  };\n\n  const taskSubmit = (e) => {\n    const updatedTasks = [...tasks];\n    updatedTasks.push({ id: Math.random(), name: taskInput, priority: priorityValue, status: 'TODO' });\n    setTasks(updatedTasks);\n    taskReset();\n  };\n\n  const taskReset = () => {\n    setTaskInput('');\n    setPriorityValue('0');\n    setIsOpenCreateTaskForm(false);\n    setIsActiveButtonTaskCreate(false);\n  };\n\n  const changePriority = (id, isIncrease) => {\n    const task = tasks.find(task => task.id === id);\n    if(isIncrease) {\n      task.priority--;\n    } else {\n      task.priority++;\n    }\n    setTasks([...tasks]);\n  }\n\n  return (\n    <div className=\"container\">\n      <Header openCreateTaskForm={openCreateTaskForm}\n        onTaskChange={onTaskChange}\n        taskSubmit={taskSubmit}\n        taskReset={taskReset}\n        isOpenCreateTaskForm={isOpenCreateTaskForm}\n        taskInput={taskInput}\n        isActiveButtonTaskCreate={isActiveButtonTaskCreate}\n        onPriorityChange={onPriorityChange}\n        priorityValue={priorityValue}\n        isValidTaskInput={isValidTaskInput}\n      />\n      <Board tasks={tasks} statuses={statuses}\n        onTaskDelete={onTaskDelete}\n        onStatusChangeRight={onStatusChangeRight}\n        onStatusChangeLeft={onStatusChangeLeft}\n        onTaskSave={onTaskSave}\n        priorityValue={priorityValue}\n        changePriority={changePriority}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}